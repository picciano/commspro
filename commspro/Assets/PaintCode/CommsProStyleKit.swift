//
//  CommsProStyleKit.swift
//  commspro
//
//  Created by Anthony Picciano on 11/25/16.
//  Copyright Â© 2016 Anthony Picciano. All rights reserved.
//
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//



import UIKit

public class CommsProStyleKit : NSObject {

    //// Cache

    private struct Cache {
        static let commsWhite: UIColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
        static let commsTan: UIColor = UIColor(red: 0.809, green: 0.684, blue: 0.556, alpha: 1.000)
        static let commsLightGreen: UIColor = UIColor(red: 0.736, green: 0.841, blue: 0.260, alpha: 1.000)
        static let commsPeach: UIColor = UIColor(red: 0.961, green: 0.750, blue: 0.437, alpha: 1.000)
        static let commsDeepViolet: UIColor = UIColor(red: 0.114, green: 0.098, blue: 0.299, alpha: 1.000)
        static let commsBlue: UIColor = UIColor(red: 0.391, green: 0.638, blue: 0.858, alpha: 1.000)
        static let commsBlack: UIColor = UIColor(red: 0.029, green: 0.033, blue: 0.033, alpha: 1.000)
        static let commsDeepGreen: UIColor = UIColor(red: 0.334, green: 0.350, blue: 0.300, alpha: 1.000)
        static let commsDarkTan: UIColor = UIColor(red: 0.655, green: 0.613, blue: 0.530, alpha: 1.000)
        static let commsGreen: UIColor = UIColor(red: 0.233, green: 0.462, blue: 0.483, alpha: 1.000)
        static let commsOrange: UIColor = UIColor(red: 0.926, green: 0.406, blue: 0.115, alpha: 1.000)
        static var imageOfChannelLock: UIImage?
        static var channelLockTargets: [AnyObject]?
    }

    //// Colors

    public dynamic class var commsWhite: UIColor { return Cache.commsWhite }
    public dynamic class var commsTan: UIColor { return Cache.commsTan }
    public dynamic class var commsLightGreen: UIColor { return Cache.commsLightGreen }
    public dynamic class var commsPeach: UIColor { return Cache.commsPeach }
    public dynamic class var commsDeepViolet: UIColor { return Cache.commsDeepViolet }
    public dynamic class var commsBlue: UIColor { return Cache.commsBlue }
    public dynamic class var commsBlack: UIColor { return Cache.commsBlack }
    public dynamic class var commsDeepGreen: UIColor { return Cache.commsDeepGreen }
    public dynamic class var commsDarkTan: UIColor { return Cache.commsDarkTan }
    public dynamic class var commsGreen: UIColor { return Cache.commsGreen }
    public dynamic class var commsOrange: UIColor { return Cache.commsOrange }

    //// Drawing Methods

    public dynamic class func drawLogo(frame: CGRect = CGRect(x: 0, y: 0, width: 250, height: 120), isPro: Bool = false, isFree: Bool = true) {
        //// General Declarations
        // This non-generic function dramatically improves compilation times of complex expressions.
        func fastFloor(_ x: CGFloat) -> CGFloat { return floor(x) }


        //// Subframes
        let group: CGRect = CGRect(x: frame.minX, y: frame.minY, width: frame.width, height: frame.height)


        //// Group
        //// Deep Green Rectangle Drawing
        let deepGreenRectanglePath = UIBezierPath(rect: CGRect(x: group.minX + fastFloor(group.width * 0.00000 + 0.5), y: group.minY + fastFloor(group.height * 0.83333 + 0.5), width: fastFloor(group.width * 1.00000 + 0.5) - fastFloor(group.width * 0.00000 + 0.5), height: fastFloor(group.height * 1.00000 + 0.5) - fastFloor(group.height * 0.83333 + 0.5)))
        CommsProStyleKit.commsDeepGreen.setFill()
        deepGreenRectanglePath.fill()


        //// Tan Rectangle Drawing
        let tanRectanglePath = UIBezierPath(rect: CGRect(x: group.minX + fastFloor(group.width * 0.00000 + 0.5), y: group.minY + fastFloor(group.height * 0.00000 + 0.5), width: fastFloor(group.width * 1.00000 + 0.5) - fastFloor(group.width * 0.00000 + 0.5), height: fastFloor(group.height * 0.83333 + 0.5) - fastFloor(group.height * 0.00000 + 0.5)))
        CommsProStyleKit.commsDarkTan.setFill()
        tanRectanglePath.fill()


        //// COMMS Drawing
        let cOMMSPath = UIBezierPath()
        cOMMSPath.move(to: CGPoint(x: group.minX + 0.19733 * group.width, y: group.minY + 0.20677 * group.height))
        cOMMSPath.addLine(to: CGPoint(x: group.minX + 0.18791 * group.width, y: group.minY + 0.25687 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.14544 * group.width, y: group.minY + 0.23636 * group.height), controlPoint1: CGPoint(x: group.minX + 0.17891 * group.width, y: group.minY + 0.24320 * group.height), controlPoint2: CGPoint(x: group.minX + 0.16475 * group.width, y: group.minY + 0.23636 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.10191 * group.width, y: group.minY + 0.28499 * group.height), controlPoint1: CGPoint(x: group.minX + 0.12734 * group.width, y: group.minY + 0.23636 * group.height), controlPoint2: CGPoint(x: group.minX + 0.11284 * group.width, y: group.minY + 0.25257 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.08553 * group.width, y: group.minY + 0.41038 * group.height), controlPoint1: CGPoint(x: group.minX + 0.09099 * group.width, y: group.minY + 0.31742 * group.height), controlPoint2: CGPoint(x: group.minX + 0.08553 * group.width, y: group.minY + 0.35921 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.10234 * group.width, y: group.minY + 0.52918 * group.height), controlPoint1: CGPoint(x: group.minX + 0.08553 * group.width, y: group.minY + 0.45921 * group.height), controlPoint2: CGPoint(x: group.minX + 0.09113 * group.width, y: group.minY + 0.49881 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.14572 * group.width, y: group.minY + 0.57474 * group.height), controlPoint1: CGPoint(x: group.minX + 0.11354 * group.width, y: group.minY + 0.55955 * group.height), controlPoint2: CGPoint(x: group.minX + 0.12800 * group.width, y: group.minY + 0.57474 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.19030 * group.width, y: group.minY + 0.53197 * group.height), controlPoint1: CGPoint(x: group.minX + 0.16503 * group.width, y: group.minY + 0.57474 * group.height), controlPoint2: CGPoint(x: group.minX + 0.17989 * group.width, y: group.minY + 0.56048 * group.height))
        cOMMSPath.addLine(to: CGPoint(x: group.minX + 0.20577 * group.width, y: group.minY + 0.57679 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.14277 * group.width, y: group.minY + 0.62747 * group.height), controlPoint1: CGPoint(x: group.minX + 0.18945 * group.width, y: group.minY + 0.61058 * group.height), controlPoint2: CGPoint(x: group.minX + 0.16845 * group.width, y: group.minY + 0.62747 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.07920 * group.width, y: group.minY + 0.56683 * group.height), controlPoint1: CGPoint(x: group.minX + 0.11586 * group.width, y: group.minY + 0.62747 * group.height), controlPoint2: CGPoint(x: group.minX + 0.09467 * group.width, y: group.minY + 0.60726 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.05600 * group.width, y: group.minY + 0.40687 * group.height), controlPoint1: CGPoint(x: group.minX + 0.06373 * group.width, y: group.minY + 0.52640 * group.height), controlPoint2: CGPoint(x: group.minX + 0.05600 * group.width, y: group.minY + 0.47308 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.08075 * group.width, y: group.minY + 0.24720 * group.height), controlPoint1: CGPoint(x: group.minX + 0.05600 * group.width, y: group.minY + 0.34281 * group.height), controlPoint2: CGPoint(x: group.minX + 0.06425 * group.width, y: group.minY + 0.28958 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.14473 * group.width, y: group.minY + 0.18363 * group.height), controlPoint1: CGPoint(x: group.minX + 0.09725 * group.width, y: group.minY + 0.20482 * group.height), controlPoint2: CGPoint(x: group.minX + 0.11858 * group.width, y: group.minY + 0.18363 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.19733 * group.width, y: group.minY + 0.20677 * group.height), controlPoint1: CGPoint(x: group.minX + 0.16714 * group.width, y: group.minY + 0.18363 * group.height), controlPoint2: CGPoint(x: group.minX + 0.18467 * group.width, y: group.minY + 0.19134 * group.height))
        cOMMSPath.close()
        cOMMSPath.move(to: CGPoint(x: group.minX + 0.22827 * group.width, y: group.minY + 0.40189 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.25070 * group.width, y: group.minY + 0.24603 * group.height), controlPoint1: CGPoint(x: group.minX + 0.22827 * group.width, y: group.minY + 0.33978 * group.height), controlPoint2: CGPoint(x: group.minX + 0.23574 * group.width, y: group.minY + 0.28783 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.31123 * group.width, y: group.minY + 0.18333 * group.height), controlPoint1: CGPoint(x: group.minX + 0.26565 * group.width, y: group.minY + 0.20423 * group.height), controlPoint2: CGPoint(x: group.minX + 0.28583 * group.width, y: group.minY + 0.18333 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.37698 * group.width, y: group.minY + 0.24105 * group.height), controlPoint1: CGPoint(x: group.minX + 0.33983 * group.width, y: group.minY + 0.18333 * group.height), controlPoint2: CGPoint(x: group.minX + 0.36174 * group.width, y: group.minY + 0.20257 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.39983 * group.width, y: group.minY + 0.40189 * group.height), controlPoint1: CGPoint(x: group.minX + 0.39221 * group.width, y: group.minY + 0.27952 * group.height), controlPoint2: CGPoint(x: group.minX + 0.39983 * group.width, y: group.minY + 0.33314 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.37691 * group.width, y: group.minY + 0.56756 * group.height), controlPoint1: CGPoint(x: group.minX + 0.39983 * group.width, y: group.minY + 0.47240 * group.height), controlPoint2: CGPoint(x: group.minX + 0.39219 * group.width, y: group.minY + 0.52762 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.31123 * group.width, y: group.minY + 0.62747 * group.height), controlPoint1: CGPoint(x: group.minX + 0.36162 * group.width, y: group.minY + 0.60750 * group.height), controlPoint2: CGPoint(x: group.minX + 0.33973 * group.width, y: group.minY + 0.62747 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.25027 * group.width, y: group.minY + 0.56419 * group.height), controlPoint1: CGPoint(x: group.minX + 0.28527 * group.width, y: group.minY + 0.62747 * group.height), controlPoint2: CGPoint(x: group.minX + 0.26495 * group.width, y: group.minY + 0.60638 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.22827 * group.width, y: group.minY + 0.40189 * group.height), controlPoint1: CGPoint(x: group.minX + 0.23560 * group.width, y: group.minY + 0.52200 * group.height), controlPoint2: CGPoint(x: group.minX + 0.22827 * group.width, y: group.minY + 0.46790 * group.height))
        cOMMSPath.close()
        cOMMSPath.move(to: CGPoint(x: group.minX + 0.25780 * group.width, y: group.minY + 0.40189 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.27179 * group.width, y: group.minY + 0.52523 * group.height), controlPoint1: CGPoint(x: group.minX + 0.25780 * group.width, y: group.minY + 0.45111 * group.height), controlPoint2: CGPoint(x: group.minX + 0.26246 * group.width, y: group.minY + 0.49222 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.31123 * group.width, y: group.minY + 0.57474 * group.height), controlPoint1: CGPoint(x: group.minX + 0.28112 * group.width, y: group.minY + 0.55824 * group.height), controlPoint2: CGPoint(x: group.minX + 0.29427 * group.width, y: group.minY + 0.57474 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.35518 * group.width, y: group.minY + 0.52933 * group.height), controlPoint1: CGPoint(x: group.minX + 0.33045 * group.width, y: group.minY + 0.57474 * group.height), controlPoint2: CGPoint(x: group.minX + 0.34510 * group.width, y: group.minY + 0.55960 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.37030 * group.width, y: group.minY + 0.40189 * group.height), controlPoint1: CGPoint(x: group.minX + 0.36526 * group.width, y: group.minY + 0.49906 * group.height), controlPoint2: CGPoint(x: group.minX + 0.37030 * group.width, y: group.minY + 0.45658 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.31123 * group.width, y: group.minY + 0.23607 * group.height), controlPoint1: CGPoint(x: group.minX + 0.37030 * group.width, y: group.minY + 0.29134 * group.height), controlPoint2: CGPoint(x: group.minX + 0.35061 * group.width, y: group.minY + 0.23607 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.27144 * group.width, y: group.minY + 0.28060 * group.height), controlPoint1: CGPoint(x: group.minX + 0.29380 * group.width, y: group.minY + 0.23607 * group.height), controlPoint2: CGPoint(x: group.minX + 0.28053 * group.width, y: group.minY + 0.25091 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.25780 * group.width, y: group.minY + 0.40189 * group.height), controlPoint1: CGPoint(x: group.minX + 0.26234 * group.width, y: group.minY + 0.31029 * group.height), controlPoint2: CGPoint(x: group.minX + 0.25780 * group.width, y: group.minY + 0.35072 * group.height))
        cOMMSPath.close()
        cOMMSPath.move(to: CGPoint(x: group.minX + 0.58728 * group.width, y: group.minY + 0.62015 * group.height))
        cOMMSPath.addLine(to: CGPoint(x: group.minX + 0.56281 * group.width, y: group.minY + 0.34447 * group.height))
        cOMMSPath.addLine(to: CGPoint(x: group.minX + 0.51781 * group.width, y: group.minY + 0.62601 * group.height))
        cOMMSPath.addLine(to: CGPoint(x: group.minX + 0.51078 * group.width, y: group.minY + 0.62601 * group.height))
        cOMMSPath.addLine(to: CGPoint(x: group.minX + 0.46452 * group.width, y: group.minY + 0.34447 * group.height))
        cOMMSPath.addLine(to: CGPoint(x: group.minX + 0.44061 * group.width, y: group.minY + 0.62015 * group.height))
        cOMMSPath.addLine(to: CGPoint(x: group.minX + 0.41389 * group.width, y: group.minY + 0.62015 * group.height))
        cOMMSPath.addLine(to: CGPoint(x: group.minX + 0.45242 * group.width, y: group.minY + 0.19095 * group.height))
        cOMMSPath.addLine(to: CGPoint(x: group.minX + 0.46522 * group.width, y: group.minY + 0.19095 * group.height))
        cOMMSPath.addLine(to: CGPoint(x: group.minX + 0.51430 * group.width, y: group.minY + 0.50413 * group.height))
        cOMMSPath.addLine(to: CGPoint(x: group.minX + 0.55958 * group.width, y: group.minY + 0.19095 * group.height))
        cOMMSPath.addLine(to: CGPoint(x: group.minX + 0.57223 * group.width, y: group.minY + 0.19095 * group.height))
        cOMMSPath.addLine(to: CGPoint(x: group.minX + 0.61400 * group.width, y: group.minY + 0.62015 * group.height))
        cOMMSPath.addLine(to: CGPoint(x: group.minX + 0.58728 * group.width, y: group.minY + 0.62015 * group.height))
        cOMMSPath.close()
        cOMMSPath.move(to: CGPoint(x: group.minX + 0.79161 * group.width, y: group.minY + 0.62015 * group.height))
        cOMMSPath.addLine(to: CGPoint(x: group.minX + 0.76714 * group.width, y: group.minY + 0.34447 * group.height))
        cOMMSPath.addLine(to: CGPoint(x: group.minX + 0.72214 * group.width, y: group.minY + 0.62601 * group.height))
        cOMMSPath.addLine(to: CGPoint(x: group.minX + 0.71511 * group.width, y: group.minY + 0.62601 * group.height))
        cOMMSPath.addLine(to: CGPoint(x: group.minX + 0.66884 * group.width, y: group.minY + 0.34447 * group.height))
        cOMMSPath.addLine(to: CGPoint(x: group.minX + 0.64494 * group.width, y: group.minY + 0.62015 * group.height))
        cOMMSPath.addLine(to: CGPoint(x: group.minX + 0.61822 * group.width, y: group.minY + 0.62015 * group.height))
        cOMMSPath.addLine(to: CGPoint(x: group.minX + 0.65675 * group.width, y: group.minY + 0.19095 * group.height))
        cOMMSPath.addLine(to: CGPoint(x: group.minX + 0.66955 * group.width, y: group.minY + 0.19095 * group.height))
        cOMMSPath.addLine(to: CGPoint(x: group.minX + 0.71862 * group.width, y: group.minY + 0.50413 * group.height))
        cOMMSPath.addLine(to: CGPoint(x: group.minX + 0.76391 * group.width, y: group.minY + 0.19095 * group.height))
        cOMMSPath.addLine(to: CGPoint(x: group.minX + 0.77656 * group.width, y: group.minY + 0.19095 * group.height))
        cOMMSPath.addLine(to: CGPoint(x: group.minX + 0.81833 * group.width, y: group.minY + 0.62015 * group.height))
        cOMMSPath.addLine(to: CGPoint(x: group.minX + 0.79161 * group.width, y: group.minY + 0.62015 * group.height))
        cOMMSPath.close()
        cOMMSPath.move(to: CGPoint(x: group.minX + 0.83155 * group.width, y: group.minY + 0.60052 * group.height))
        cOMMSPath.addLine(to: CGPoint(x: group.minX + 0.84181 * group.width, y: group.minY + 0.54661 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.86143 * group.width, y: group.minY + 0.56668 * group.height), controlPoint1: CGPoint(x: group.minX + 0.84706 * group.width, y: group.minY + 0.55462 * group.height), controlPoint2: CGPoint(x: group.minX + 0.85360 * group.width, y: group.minY + 0.56131 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.88245 * group.width, y: group.minY + 0.57474 * group.height), controlPoint1: CGPoint(x: group.minX + 0.86926 * group.width, y: group.minY + 0.57205 * group.height), controlPoint2: CGPoint(x: group.minX + 0.87627 * group.width, y: group.minY + 0.57474 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.90889 * group.width, y: group.minY + 0.55599 * group.height), controlPoint1: CGPoint(x: group.minX + 0.89342 * group.width, y: group.minY + 0.57474 * group.height), controlPoint2: CGPoint(x: group.minX + 0.90223 * group.width, y: group.minY + 0.56849 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.91888 * group.width, y: group.minY + 0.50824 * group.height), controlPoint1: CGPoint(x: group.minX + 0.91555 * group.width, y: group.minY + 0.54349 * group.height), controlPoint2: CGPoint(x: group.minX + 0.91888 * group.width, y: group.minY + 0.52757 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.91332 * group.width, y: group.minY + 0.46795 * group.height), controlPoint1: CGPoint(x: group.minX + 0.91888 * group.width, y: group.minY + 0.49378 * group.height), controlPoint2: CGPoint(x: group.minX + 0.91702 * group.width, y: group.minY + 0.48035 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.88541 * group.width, y: group.minY + 0.42738 * group.height), controlPoint1: CGPoint(x: group.minX + 0.90962 * group.width, y: group.minY + 0.45555 * group.height), controlPoint2: CGPoint(x: group.minX + 0.90031 * group.width, y: group.minY + 0.44202 * group.height))
        cOMMSPath.addLine(to: CGPoint(x: group.minX + 0.86881 * group.width, y: group.minY + 0.41126 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.83935 * group.width, y: group.minY + 0.36263 * group.height), controlPoint1: CGPoint(x: group.minX + 0.85475 * group.width, y: group.minY + 0.39759 * group.height), controlPoint2: CGPoint(x: group.minX + 0.84493 * group.width, y: group.minY + 0.38138 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.83098 * group.width, y: group.minY + 0.29495 * group.height), controlPoint1: CGPoint(x: group.minX + 0.83377 * group.width, y: group.minY + 0.34388 * group.height), controlPoint2: CGPoint(x: group.minX + 0.83098 * group.width, y: group.minY + 0.32132 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.84730 * group.width, y: group.minY + 0.21527 * group.height), controlPoint1: CGPoint(x: group.minX + 0.83098 * group.width, y: group.minY + 0.26292 * group.height), controlPoint2: CGPoint(x: group.minX + 0.83642 * group.width, y: group.minY + 0.23636 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.88920 * group.width, y: group.minY + 0.18363 * group.height), controlPoint1: CGPoint(x: group.minX + 0.85817 * group.width, y: group.minY + 0.19417 * group.height), controlPoint2: CGPoint(x: group.minX + 0.87214 * group.width, y: group.minY + 0.18363 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.93673 * group.width, y: group.minY + 0.20677 * group.height), controlPoint1: CGPoint(x: group.minX + 0.91198 * group.width, y: group.minY + 0.18363 * group.height), controlPoint2: CGPoint(x: group.minX + 0.92783 * group.width, y: group.minY + 0.19134 * group.height))
        cOMMSPath.addLine(to: CGPoint(x: group.minX + 0.92844 * group.width, y: group.minY + 0.25775 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.91128 * group.width, y: group.minY + 0.24134 * group.height), controlPoint1: CGPoint(x: group.minX + 0.92469 * group.width, y: group.minY + 0.25208 * group.height), controlPoint2: CGPoint(x: group.minX + 0.91897 * group.width, y: group.minY + 0.24661 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.88991 * group.width, y: group.minY + 0.23343 * group.height), controlPoint1: CGPoint(x: group.minX + 0.90359 * group.width, y: group.minY + 0.23607 * group.height), controlPoint2: CGPoint(x: group.minX + 0.89647 * group.width, y: group.minY + 0.23343 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.86734 * group.width, y: group.minY + 0.25042 * group.height), controlPoint1: CGPoint(x: group.minX + 0.88034 * group.width, y: group.minY + 0.23343 * group.height), controlPoint2: CGPoint(x: group.minX + 0.87282 * group.width, y: group.minY + 0.23909 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.85911 * group.width, y: group.minY + 0.29408 * group.height), controlPoint1: CGPoint(x: group.minX + 0.86185 * group.width, y: group.minY + 0.26175 * group.height), controlPoint2: CGPoint(x: group.minX + 0.85911 * group.width, y: group.minY + 0.27630 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.86206 * group.width, y: group.minY + 0.32396 * group.height), controlPoint1: CGPoint(x: group.minX + 0.85911 * group.width, y: group.minY + 0.30501 * group.height), controlPoint2: CGPoint(x: group.minX + 0.86009 * group.width, y: group.minY + 0.31497 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.87029 * group.width, y: group.minY + 0.34652 * group.height), controlPoint1: CGPoint(x: group.minX + 0.86403 * group.width, y: group.minY + 0.33294 * group.height), controlPoint2: CGPoint(x: group.minX + 0.86677 * group.width, y: group.minY + 0.34046 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.89188 * group.width, y: group.minY + 0.37201 * group.height), controlPoint1: CGPoint(x: group.minX + 0.87380 * group.width, y: group.minY + 0.35257 * group.height), controlPoint2: CGPoint(x: group.minX + 0.88100 * group.width, y: group.minY + 0.36107 * group.height))
        cOMMSPath.addLine(to: CGPoint(x: group.minX + 0.90875 * group.width, y: group.minY + 0.38870 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.93835 * group.width, y: group.minY + 0.43836 * group.height), controlPoint1: CGPoint(x: group.minX + 0.92281 * group.width, y: group.minY + 0.40257 * group.height), controlPoint2: CGPoint(x: group.minX + 0.93268 * group.width, y: group.minY + 0.41912 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.94686 * group.width, y: group.minY + 0.51175 * group.height), controlPoint1: CGPoint(x: group.minX + 0.94402 * group.width, y: group.minY + 0.45760 * group.height), controlPoint2: CGPoint(x: group.minX + 0.94686 * group.width, y: group.minY + 0.48206 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.92823 * group.width, y: group.minY + 0.59378 * group.height), controlPoint1: CGPoint(x: group.minX + 0.94686 * group.width, y: group.minY + 0.54398 * group.height), controlPoint2: CGPoint(x: group.minX + 0.94065 * group.width, y: group.minY + 0.57132 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.87838 * group.width, y: group.minY + 0.62747 * group.height), controlPoint1: CGPoint(x: group.minX + 0.91580 * group.width, y: group.minY + 0.61624 * group.height), controlPoint2: CGPoint(x: group.minX + 0.89919 * group.width, y: group.minY + 0.62747 * group.height))
        cOMMSPath.addCurve(to: CGPoint(x: group.minX + 0.83155 * group.width, y: group.minY + 0.60052 * group.height), controlPoint1: CGPoint(x: group.minX + 0.86009 * group.width, y: group.minY + 0.62747 * group.height), controlPoint2: CGPoint(x: group.minX + 0.84448 * group.width, y: group.minY + 0.61849 * group.height))
        cOMMSPath.close()
        UIColor.black.setFill()
        cOMMSPath.fill()


        if (isFree) {
            //// Free Drawing
            let freePath = UIBezierPath()
            freePath.move(to: CGPoint(x: group.minX + 0.71150 * group.width, y: group.minY + 0.76685 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.70824 * group.width, y: group.minY + 0.77765 * group.height), controlPoint1: CGPoint(x: group.minX + 0.71150 * group.width, y: group.minY + 0.77425 * group.height), controlPoint2: CGPoint(x: group.minX + 0.71160 * group.width, y: group.minY + 0.77545 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.70613 * group.width, y: group.minY + 0.78305 * group.height), controlPoint1: CGPoint(x: group.minX + 0.70699 * group.width, y: group.minY + 0.77845 * group.height), controlPoint2: CGPoint(x: group.minX + 0.70613 * group.width, y: group.minY + 0.78025 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.70968 * group.width, y: group.minY + 0.78925 * group.height), controlPoint1: CGPoint(x: group.minX + 0.70613 * group.width, y: group.minY + 0.78885 * group.height), controlPoint2: CGPoint(x: group.minX + 0.70930 * group.width, y: group.minY + 0.78925 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.73685 * group.width, y: group.minY + 0.78925 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.74040 * group.width, y: group.minY + 0.78305 * group.height), controlPoint1: CGPoint(x: group.minX + 0.73723 * group.width, y: group.minY + 0.78925 * group.height), controlPoint2: CGPoint(x: group.minX + 0.74040 * group.width, y: group.minY + 0.78885 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.73829 * group.width, y: group.minY + 0.77765 * group.height), controlPoint1: CGPoint(x: group.minX + 0.74040 * group.width, y: group.minY + 0.78025 * group.height), controlPoint2: CGPoint(x: group.minX + 0.73954 * group.width, y: group.minY + 0.77845 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.73502 * group.width, y: group.minY + 0.76685 * group.height), controlPoint1: CGPoint(x: group.minX + 0.73493 * group.width, y: group.minY + 0.77545 * group.height), controlPoint2: CGPoint(x: group.minX + 0.73502 * group.width, y: group.minY + 0.77425 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.73502 * group.width, y: group.minY + 0.63965 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.70968 * group.width, y: group.minY + 0.63965 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.70613 * group.width, y: group.minY + 0.64585 * group.height), controlPoint1: CGPoint(x: group.minX + 0.70930 * group.width, y: group.minY + 0.63965 * group.height), controlPoint2: CGPoint(x: group.minX + 0.70613 * group.width, y: group.minY + 0.64005 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.70824 * group.width, y: group.minY + 0.65125 * group.height), controlPoint1: CGPoint(x: group.minX + 0.70613 * group.width, y: group.minY + 0.64865 * group.height), controlPoint2: CGPoint(x: group.minX + 0.70699 * group.width, y: group.minY + 0.65045 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.71150 * group.width, y: group.minY + 0.66205 * group.height), controlPoint1: CGPoint(x: group.minX + 0.71160 * group.width, y: group.minY + 0.65345 * group.height), controlPoint2: CGPoint(x: group.minX + 0.71150 * group.width, y: group.minY + 0.65465 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.71150 * group.width, y: group.minY + 0.76685 * group.height))
            freePath.close()
            freePath.move(to: CGPoint(x: group.minX + 0.73934 * group.width, y: group.minY + 0.65125 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.75518 * group.width, y: group.minY + 0.68005 * group.height), controlPoint1: CGPoint(x: group.minX + 0.74779 * group.width, y: group.minY + 0.65405 * group.height), controlPoint2: CGPoint(x: group.minX + 0.75269 * group.width, y: group.minY + 0.66385 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.75778 * group.width, y: group.minY + 0.68505 * group.height), controlPoint1: CGPoint(x: group.minX + 0.75566 * group.width, y: group.minY + 0.68305 * group.height), controlPoint2: CGPoint(x: group.minX + 0.75614 * group.width, y: group.minY + 0.68505 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.76075 * group.width, y: group.minY + 0.68025 * group.height), controlPoint1: CGPoint(x: group.minX + 0.76066 * group.width, y: group.minY + 0.68505 * group.height), controlPoint2: CGPoint(x: group.minX + 0.76075 * group.width, y: group.minY + 0.68125 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.76075 * group.width, y: group.minY + 0.63965 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.73934 * group.width, y: group.minY + 0.63965 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.73934 * group.width, y: group.minY + 0.65125 * group.height))
            freePath.close()
            freePath.move(to: CGPoint(x: group.minX + 0.73934 * group.width, y: group.minY + 0.71885 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.74606 * group.width, y: group.minY + 0.73645 * group.height), controlPoint1: CGPoint(x: group.minX + 0.74338 * group.width, y: group.minY + 0.72105 * group.height), controlPoint2: CGPoint(x: group.minX + 0.74520 * group.width, y: group.minY + 0.72885 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.74914 * group.width, y: group.minY + 0.74305 * group.height), controlPoint1: CGPoint(x: group.minX + 0.74654 * group.width, y: group.minY + 0.73985 * group.height), controlPoint2: CGPoint(x: group.minX + 0.74712 * group.width, y: group.minY + 0.74305 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.75163 * group.width, y: group.minY + 0.73425 * group.height), controlPoint1: CGPoint(x: group.minX + 0.75211 * group.width, y: group.minY + 0.74305 * group.height), controlPoint2: CGPoint(x: group.minX + 0.75163 * group.width, y: group.minY + 0.73585 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.75163 * group.width, y: group.minY + 0.69105 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.74914 * group.width, y: group.minY + 0.68225 * group.height), controlPoint1: CGPoint(x: group.minX + 0.75163 * group.width, y: group.minY + 0.68945 * group.height), controlPoint2: CGPoint(x: group.minX + 0.75211 * group.width, y: group.minY + 0.68225 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.74606 * group.width, y: group.minY + 0.68885 * group.height), controlPoint1: CGPoint(x: group.minX + 0.74712 * group.width, y: group.minY + 0.68225 * group.height), controlPoint2: CGPoint(x: group.minX + 0.74654 * group.width, y: group.minY + 0.68545 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.73934 * group.width, y: group.minY + 0.70645 * group.height), controlPoint1: CGPoint(x: group.minX + 0.74520 * group.width, y: group.minY + 0.69645 * group.height), controlPoint2: CGPoint(x: group.minX + 0.74338 * group.width, y: group.minY + 0.70425 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.73934 * group.width, y: group.minY + 0.71885 * group.height))
            freePath.close()
            freePath.move(to: CGPoint(x: group.minX + 0.77294 * group.width, y: group.minY + 0.76685 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.76968 * group.width, y: group.minY + 0.77765 * group.height), controlPoint1: CGPoint(x: group.minX + 0.77294 * group.width, y: group.minY + 0.77425 * group.height), controlPoint2: CGPoint(x: group.minX + 0.77304 * group.width, y: group.minY + 0.77545 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.76757 * group.width, y: group.minY + 0.78305 * group.height), controlPoint1: CGPoint(x: group.minX + 0.76843 * group.width, y: group.minY + 0.77845 * group.height), controlPoint2: CGPoint(x: group.minX + 0.76757 * group.width, y: group.minY + 0.78025 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.77112 * group.width, y: group.minY + 0.78925 * group.height), controlPoint1: CGPoint(x: group.minX + 0.76757 * group.width, y: group.minY + 0.78885 * group.height), controlPoint2: CGPoint(x: group.minX + 0.77074 * group.width, y: group.minY + 0.78925 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.79829 * group.width, y: group.minY + 0.78925 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.80184 * group.width, y: group.minY + 0.78305 * group.height), controlPoint1: CGPoint(x: group.minX + 0.79867 * group.width, y: group.minY + 0.78925 * group.height), controlPoint2: CGPoint(x: group.minX + 0.80184 * group.width, y: group.minY + 0.78885 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.79973 * group.width, y: group.minY + 0.77765 * group.height), controlPoint1: CGPoint(x: group.minX + 0.80184 * group.width, y: group.minY + 0.78025 * group.height), controlPoint2: CGPoint(x: group.minX + 0.80098 * group.width, y: group.minY + 0.77845 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.79646 * group.width, y: group.minY + 0.76685 * group.height), controlPoint1: CGPoint(x: group.minX + 0.79637 * group.width, y: group.minY + 0.77545 * group.height), controlPoint2: CGPoint(x: group.minX + 0.79646 * group.width, y: group.minY + 0.77425 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.79646 * group.width, y: group.minY + 0.63965 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.77112 * group.width, y: group.minY + 0.63965 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.76757 * group.width, y: group.minY + 0.64585 * group.height), controlPoint1: CGPoint(x: group.minX + 0.77074 * group.width, y: group.minY + 0.63965 * group.height), controlPoint2: CGPoint(x: group.minX + 0.76757 * group.width, y: group.minY + 0.64005 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.76968 * group.width, y: group.minY + 0.65125 * group.height), controlPoint1: CGPoint(x: group.minX + 0.76757 * group.width, y: group.minY + 0.64865 * group.height), controlPoint2: CGPoint(x: group.minX + 0.76843 * group.width, y: group.minY + 0.65045 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.77294 * group.width, y: group.minY + 0.66205 * group.height), controlPoint1: CGPoint(x: group.minX + 0.77304 * group.width, y: group.minY + 0.65345 * group.height), controlPoint2: CGPoint(x: group.minX + 0.77294 * group.width, y: group.minY + 0.65465 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.77294 * group.width, y: group.minY + 0.76685 * group.height))
            freePath.close()
            freePath.move(to: CGPoint(x: group.minX + 0.80078 * group.width, y: group.minY + 0.65145 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.80664 * group.width, y: group.minY + 0.66985 * group.height), controlPoint1: CGPoint(x: group.minX + 0.80558 * group.width, y: group.minY + 0.65505 * group.height), controlPoint2: CGPoint(x: group.minX + 0.80664 * group.width, y: group.minY + 0.65985 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.80664 * group.width, y: group.minY + 0.69405 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.80078 * group.width, y: group.minY + 0.71145 * group.height), controlPoint1: CGPoint(x: group.minX + 0.80664 * group.width, y: group.minY + 0.70385 * group.height), controlPoint2: CGPoint(x: group.minX + 0.80597 * group.width, y: group.minY + 0.71045 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.80078 * group.width, y: group.minY + 0.72325 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.80664 * group.width, y: group.minY + 0.74485 * group.height), controlPoint1: CGPoint(x: group.minX + 0.80654 * group.width, y: group.minY + 0.72445 * group.height), controlPoint2: CGPoint(x: group.minX + 0.80664 * group.width, y: group.minY + 0.73565 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.80664 * group.width, y: group.minY + 0.75845 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.81048 * group.width, y: group.minY + 0.78385 * group.height), controlPoint1: CGPoint(x: group.minX + 0.80664 * group.width, y: group.minY + 0.76785 * group.height), controlPoint2: CGPoint(x: group.minX + 0.80712 * group.width, y: group.minY + 0.77665 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.82133 * group.width, y: group.minY + 0.79225 * group.height), controlPoint1: CGPoint(x: group.minX + 0.81346 * group.width, y: group.minY + 0.79005 * group.height), controlPoint2: CGPoint(x: group.minX + 0.81720 * group.width, y: group.minY + 0.79225 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.83218 * group.width, y: group.minY + 0.78505 * group.height), controlPoint1: CGPoint(x: group.minX + 0.82546 * group.width, y: group.minY + 0.79225 * group.height), controlPoint2: CGPoint(x: group.minX + 0.82891 * group.width, y: group.minY + 0.79065 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.83746 * group.width, y: group.minY + 0.76845 * group.height), controlPoint1: CGPoint(x: group.minX + 0.83429 * group.width, y: group.minY + 0.78165 * group.height), controlPoint2: CGPoint(x: group.minX + 0.83746 * group.width, y: group.minY + 0.77425 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.83467 * group.width, y: group.minY + 0.76265 * group.height), controlPoint1: CGPoint(x: group.minX + 0.83746 * group.width, y: group.minY + 0.76565 * group.height), controlPoint2: CGPoint(x: group.minX + 0.83592 * group.width, y: group.minY + 0.76265 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.83054 * group.width, y: group.minY + 0.76845 * group.height), controlPoint1: CGPoint(x: group.minX + 0.83237 * group.width, y: group.minY + 0.76265 * group.height), controlPoint2: CGPoint(x: group.minX + 0.83208 * group.width, y: group.minY + 0.76845 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.82958 * group.width, y: group.minY + 0.76265 * group.height), controlPoint1: CGPoint(x: group.minX + 0.82930 * group.width, y: group.minY + 0.76845 * group.height), controlPoint2: CGPoint(x: group.minX + 0.82958 * group.width, y: group.minY + 0.76445 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.82958 * group.width, y: group.minY + 0.74505 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.81269 * group.width, y: group.minY + 0.71605 * group.height), controlPoint1: CGPoint(x: group.minX + 0.82939 * group.width, y: group.minY + 0.72385 * group.height), controlPoint2: CGPoint(x: group.minX + 0.82123 * group.width, y: group.minY + 0.71865 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.81269 * group.width, y: group.minY + 0.71565 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.82958 * group.width, y: group.minY + 0.67785 * group.height), controlPoint1: CGPoint(x: group.minX + 0.82248 * group.width, y: group.minY + 0.71085 * group.height), controlPoint2: CGPoint(x: group.minX + 0.82978 * group.width, y: group.minY + 0.70085 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.81979 * group.width, y: group.minY + 0.64505 * group.height), controlPoint1: CGPoint(x: group.minX + 0.82949 * group.width, y: group.minY + 0.66265 * group.height), controlPoint2: CGPoint(x: group.minX + 0.82622 * group.width, y: group.minY + 0.65165 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.80126 * group.width, y: group.minY + 0.63965 * group.height), controlPoint1: CGPoint(x: group.minX + 0.81403 * group.width, y: group.minY + 0.63925 * group.height), controlPoint2: CGPoint(x: group.minX + 0.80750 * group.width, y: group.minY + 0.63965 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.80078 * group.width, y: group.minY + 0.63965 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.80078 * group.width, y: group.minY + 0.65145 * group.height))
            freePath.close()
            freePath.move(to: CGPoint(x: group.minX + 0.83986 * group.width, y: group.minY + 0.64585 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.84197 * group.width, y: group.minY + 0.65125 * group.height), controlPoint1: CGPoint(x: group.minX + 0.83986 * group.width, y: group.minY + 0.64865 * group.height), controlPoint2: CGPoint(x: group.minX + 0.84072 * group.width, y: group.minY + 0.65045 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.84523 * group.width, y: group.minY + 0.66205 * group.height), controlPoint1: CGPoint(x: group.minX + 0.84533 * group.width, y: group.minY + 0.65345 * group.height), controlPoint2: CGPoint(x: group.minX + 0.84523 * group.width, y: group.minY + 0.65465 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.84523 * group.width, y: group.minY + 0.76685 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.84197 * group.width, y: group.minY + 0.77765 * group.height), controlPoint1: CGPoint(x: group.minX + 0.84523 * group.width, y: group.minY + 0.77425 * group.height), controlPoint2: CGPoint(x: group.minX + 0.84533 * group.width, y: group.minY + 0.77545 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.83986 * group.width, y: group.minY + 0.78305 * group.height), controlPoint1: CGPoint(x: group.minX + 0.84072 * group.width, y: group.minY + 0.77845 * group.height), controlPoint2: CGPoint(x: group.minX + 0.83986 * group.width, y: group.minY + 0.78025 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.84341 * group.width, y: group.minY + 0.78925 * group.height), controlPoint1: CGPoint(x: group.minX + 0.83986 * group.width, y: group.minY + 0.78885 * group.height), controlPoint2: CGPoint(x: group.minX + 0.84302 * group.width, y: group.minY + 0.78925 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.86875 * group.width, y: group.minY + 0.78925 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.86875 * group.width, y: group.minY + 0.63965 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.84341 * group.width, y: group.minY + 0.63965 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.83986 * group.width, y: group.minY + 0.64585 * group.height), controlPoint1: CGPoint(x: group.minX + 0.84302 * group.width, y: group.minY + 0.63965 * group.height), controlPoint2: CGPoint(x: group.minX + 0.83986 * group.width, y: group.minY + 0.64005 * group.height))
            freePath.close()
            freePath.move(to: CGPoint(x: group.minX + 0.87307 * group.width, y: group.minY + 0.65125 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.88891 * group.width, y: group.minY + 0.68005 * group.height), controlPoint1: CGPoint(x: group.minX + 0.88152 * group.width, y: group.minY + 0.65405 * group.height), controlPoint2: CGPoint(x: group.minX + 0.88642 * group.width, y: group.minY + 0.66385 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.89150 * group.width, y: group.minY + 0.68505 * group.height), controlPoint1: CGPoint(x: group.minX + 0.88939 * group.width, y: group.minY + 0.68305 * group.height), controlPoint2: CGPoint(x: group.minX + 0.88987 * group.width, y: group.minY + 0.68505 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.89448 * group.width, y: group.minY + 0.68025 * group.height), controlPoint1: CGPoint(x: group.minX + 0.89438 * group.width, y: group.minY + 0.68505 * group.height), controlPoint2: CGPoint(x: group.minX + 0.89448 * group.width, y: group.minY + 0.68125 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.89448 * group.width, y: group.minY + 0.63965 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.87307 * group.width, y: group.minY + 0.63965 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.87307 * group.width, y: group.minY + 0.65125 * group.height))
            freePath.close()
            freePath.move(to: CGPoint(x: group.minX + 0.87307 * group.width, y: group.minY + 0.78925 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.89515 * group.width, y: group.minY + 0.78925 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.89515 * group.width, y: group.minY + 0.74925 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.89237 * group.width, y: group.minY + 0.74245 * group.height), controlPoint1: CGPoint(x: group.minX + 0.89515 * group.width, y: group.minY + 0.74845 * group.height), controlPoint2: CGPoint(x: group.minX + 0.89544 * group.width, y: group.minY + 0.74245 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.88939 * group.width, y: group.minY + 0.74865 * group.height), controlPoint1: CGPoint(x: group.minX + 0.89064 * group.width, y: group.minY + 0.74245 * group.height), controlPoint2: CGPoint(x: group.minX + 0.89006 * group.width, y: group.minY + 0.74565 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.87307 * group.width, y: group.minY + 0.77765 * group.height), controlPoint1: CGPoint(x: group.minX + 0.88680 * group.width, y: group.minY + 0.76465 * group.height), controlPoint2: CGPoint(x: group.minX + 0.88085 * group.width, y: group.minY + 0.77565 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.87307 * group.width, y: group.minY + 0.78925 * group.height))
            freePath.close()
            freePath.move(to: CGPoint(x: group.minX + 0.87307 * group.width, y: group.minY + 0.71885 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.87979 * group.width, y: group.minY + 0.73645 * group.height), controlPoint1: CGPoint(x: group.minX + 0.87710 * group.width, y: group.minY + 0.72105 * group.height), controlPoint2: CGPoint(x: group.minX + 0.87893 * group.width, y: group.minY + 0.72885 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.88286 * group.width, y: group.minY + 0.74305 * group.height), controlPoint1: CGPoint(x: group.minX + 0.88027 * group.width, y: group.minY + 0.73985 * group.height), controlPoint2: CGPoint(x: group.minX + 0.88085 * group.width, y: group.minY + 0.74305 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.88536 * group.width, y: group.minY + 0.73425 * group.height), controlPoint1: CGPoint(x: group.minX + 0.88584 * group.width, y: group.minY + 0.74305 * group.height), controlPoint2: CGPoint(x: group.minX + 0.88536 * group.width, y: group.minY + 0.73585 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.88536 * group.width, y: group.minY + 0.69105 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.88286 * group.width, y: group.minY + 0.68225 * group.height), controlPoint1: CGPoint(x: group.minX + 0.88536 * group.width, y: group.minY + 0.68945 * group.height), controlPoint2: CGPoint(x: group.minX + 0.88584 * group.width, y: group.minY + 0.68225 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.87979 * group.width, y: group.minY + 0.68885 * group.height), controlPoint1: CGPoint(x: group.minX + 0.88085 * group.width, y: group.minY + 0.68225 * group.height), controlPoint2: CGPoint(x: group.minX + 0.88027 * group.width, y: group.minY + 0.68545 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.87307 * group.width, y: group.minY + 0.70645 * group.height), controlPoint1: CGPoint(x: group.minX + 0.87893 * group.width, y: group.minY + 0.69645 * group.height), controlPoint2: CGPoint(x: group.minX + 0.87710 * group.width, y: group.minY + 0.70425 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.87307 * group.width, y: group.minY + 0.71885 * group.height))
            freePath.close()
            freePath.move(to: CGPoint(x: group.minX + 0.90302 * group.width, y: group.minY + 0.64585 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.90514 * group.width, y: group.minY + 0.65125 * group.height), controlPoint1: CGPoint(x: group.minX + 0.90302 * group.width, y: group.minY + 0.64865 * group.height), controlPoint2: CGPoint(x: group.minX + 0.90389 * group.width, y: group.minY + 0.65045 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.90840 * group.width, y: group.minY + 0.66205 * group.height), controlPoint1: CGPoint(x: group.minX + 0.90850 * group.width, y: group.minY + 0.65345 * group.height), controlPoint2: CGPoint(x: group.minX + 0.90840 * group.width, y: group.minY + 0.65465 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.90840 * group.width, y: group.minY + 0.76685 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.90514 * group.width, y: group.minY + 0.77765 * group.height), controlPoint1: CGPoint(x: group.minX + 0.90840 * group.width, y: group.minY + 0.77425 * group.height), controlPoint2: CGPoint(x: group.minX + 0.90850 * group.width, y: group.minY + 0.77545 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.90302 * group.width, y: group.minY + 0.78305 * group.height), controlPoint1: CGPoint(x: group.minX + 0.90389 * group.width, y: group.minY + 0.77845 * group.height), controlPoint2: CGPoint(x: group.minX + 0.90302 * group.width, y: group.minY + 0.78025 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.90658 * group.width, y: group.minY + 0.78925 * group.height), controlPoint1: CGPoint(x: group.minX + 0.90302 * group.width, y: group.minY + 0.78885 * group.height), controlPoint2: CGPoint(x: group.minX + 0.90619 * group.width, y: group.minY + 0.78925 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.93192 * group.width, y: group.minY + 0.78925 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.93192 * group.width, y: group.minY + 0.63965 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.90658 * group.width, y: group.minY + 0.63965 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.90302 * group.width, y: group.minY + 0.64585 * group.height), controlPoint1: CGPoint(x: group.minX + 0.90619 * group.width, y: group.minY + 0.63965 * group.height), controlPoint2: CGPoint(x: group.minX + 0.90302 * group.width, y: group.minY + 0.64005 * group.height))
            freePath.close()
            freePath.move(to: CGPoint(x: group.minX + 0.93624 * group.width, y: group.minY + 0.65125 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.95208 * group.width, y: group.minY + 0.68005 * group.height), controlPoint1: CGPoint(x: group.minX + 0.94469 * group.width, y: group.minY + 0.65405 * group.height), controlPoint2: CGPoint(x: group.minX + 0.94958 * group.width, y: group.minY + 0.66385 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.95467 * group.width, y: group.minY + 0.68505 * group.height), controlPoint1: CGPoint(x: group.minX + 0.95256 * group.width, y: group.minY + 0.68305 * group.height), controlPoint2: CGPoint(x: group.minX + 0.95304 * group.width, y: group.minY + 0.68505 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.95765 * group.width, y: group.minY + 0.68025 * group.height), controlPoint1: CGPoint(x: group.minX + 0.95755 * group.width, y: group.minY + 0.68505 * group.height), controlPoint2: CGPoint(x: group.minX + 0.95765 * group.width, y: group.minY + 0.68125 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.95765 * group.width, y: group.minY + 0.63965 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.93624 * group.width, y: group.minY + 0.63965 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.93624 * group.width, y: group.minY + 0.65125 * group.height))
            freePath.close()
            freePath.move(to: CGPoint(x: group.minX + 0.93624 * group.width, y: group.minY + 0.78925 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.95832 * group.width, y: group.minY + 0.78925 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.95832 * group.width, y: group.minY + 0.74925 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.95554 * group.width, y: group.minY + 0.74245 * group.height), controlPoint1: CGPoint(x: group.minX + 0.95832 * group.width, y: group.minY + 0.74845 * group.height), controlPoint2: CGPoint(x: group.minX + 0.95861 * group.width, y: group.minY + 0.74245 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.95256 * group.width, y: group.minY + 0.74865 * group.height), controlPoint1: CGPoint(x: group.minX + 0.95381 * group.width, y: group.minY + 0.74245 * group.height), controlPoint2: CGPoint(x: group.minX + 0.95323 * group.width, y: group.minY + 0.74565 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.93624 * group.width, y: group.minY + 0.77765 * group.height), controlPoint1: CGPoint(x: group.minX + 0.94997 * group.width, y: group.minY + 0.76465 * group.height), controlPoint2: CGPoint(x: group.minX + 0.94402 * group.width, y: group.minY + 0.77565 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.93624 * group.width, y: group.minY + 0.78925 * group.height))
            freePath.close()
            freePath.move(to: CGPoint(x: group.minX + 0.93624 * group.width, y: group.minY + 0.71885 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.94296 * group.width, y: group.minY + 0.73645 * group.height), controlPoint1: CGPoint(x: group.minX + 0.94027 * group.width, y: group.minY + 0.72105 * group.height), controlPoint2: CGPoint(x: group.minX + 0.94210 * group.width, y: group.minY + 0.72885 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.94603 * group.width, y: group.minY + 0.74305 * group.height), controlPoint1: CGPoint(x: group.minX + 0.94344 * group.width, y: group.minY + 0.73985 * group.height), controlPoint2: CGPoint(x: group.minX + 0.94402 * group.width, y: group.minY + 0.74305 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.94853 * group.width, y: group.minY + 0.73425 * group.height), controlPoint1: CGPoint(x: group.minX + 0.94901 * group.width, y: group.minY + 0.74305 * group.height), controlPoint2: CGPoint(x: group.minX + 0.94853 * group.width, y: group.minY + 0.73585 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.94853 * group.width, y: group.minY + 0.69105 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.94603 * group.width, y: group.minY + 0.68225 * group.height), controlPoint1: CGPoint(x: group.minX + 0.94853 * group.width, y: group.minY + 0.68945 * group.height), controlPoint2: CGPoint(x: group.minX + 0.94901 * group.width, y: group.minY + 0.68225 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.94296 * group.width, y: group.minY + 0.68885 * group.height), controlPoint1: CGPoint(x: group.minX + 0.94402 * group.width, y: group.minY + 0.68225 * group.height), controlPoint2: CGPoint(x: group.minX + 0.94344 * group.width, y: group.minY + 0.68545 * group.height))
            freePath.addCurve(to: CGPoint(x: group.minX + 0.93624 * group.width, y: group.minY + 0.70645 * group.height), controlPoint1: CGPoint(x: group.minX + 0.94210 * group.width, y: group.minY + 0.69645 * group.height), controlPoint2: CGPoint(x: group.minX + 0.94027 * group.width, y: group.minY + 0.70425 * group.height))
            freePath.addLine(to: CGPoint(x: group.minX + 0.93624 * group.width, y: group.minY + 0.71885 * group.height))
            freePath.close()
            UIColor.red.setFill()
            freePath.fill()
        }


        if (isPro) {
            //// Pro Drawing
            let proPath = UIBezierPath()
            proPath.move(to: CGPoint(x: group.minX + 0.78522 * group.width, y: group.minY + 0.64793 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.79117 * group.width, y: group.minY + 0.66673 * group.height), controlPoint1: CGPoint(x: group.minX + 0.79030 * group.width, y: group.minY + 0.64953 * group.height), controlPoint2: CGPoint(x: group.minX + 0.79117 * group.width, y: group.minY + 0.65773 * group.height))
            proPath.addLine(to: CGPoint(x: group.minX + 0.79117 * group.width, y: group.minY + 0.69693 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.78522 * group.width, y: group.minY + 0.71713 * group.height), controlPoint1: CGPoint(x: group.minX + 0.79117 * group.width, y: group.minY + 0.70673 * group.height), controlPoint2: CGPoint(x: group.minX + 0.79088 * group.width, y: group.minY + 0.71493 * group.height))
            proPath.addLine(to: CGPoint(x: group.minX + 0.78522 * group.width, y: group.minY + 0.72873 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.80422 * group.width, y: group.minY + 0.72133 * group.height), controlPoint1: CGPoint(x: group.minX + 0.79434 * group.width, y: group.minY + 0.72873 * group.height), controlPoint2: CGPoint(x: group.minX + 0.79971 * group.width, y: group.minY + 0.72673 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.81411 * group.width, y: group.minY + 0.68253 * group.height), controlPoint1: CGPoint(x: group.minX + 0.81133 * group.width, y: group.minY + 0.71253 * group.height), controlPoint2: CGPoint(x: group.minX + 0.81411 * group.width, y: group.minY + 0.69933 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.80422 * group.width, y: group.minY + 0.64373 * group.height), controlPoint1: CGPoint(x: group.minX + 0.81411 * group.width, y: group.minY + 0.66573 * group.height), controlPoint2: CGPoint(x: group.minX + 0.81133 * group.width, y: group.minY + 0.65253 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.78522 * group.width, y: group.minY + 0.63633 * group.height), controlPoint1: CGPoint(x: group.minX + 0.79971 * group.width, y: group.minY + 0.63833 * group.height), controlPoint2: CGPoint(x: group.minX + 0.79434 * group.width, y: group.minY + 0.63633 * group.height))
            proPath.addLine(to: CGPoint(x: group.minX + 0.78522 * group.width, y: group.minY + 0.64793 * group.height))
            proPath.close()
            proPath.move(to: CGPoint(x: group.minX + 0.75738 * group.width, y: group.minY + 0.76353 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.75411 * group.width, y: group.minY + 0.77433 * group.height), controlPoint1: CGPoint(x: group.minX + 0.75738 * group.width, y: group.minY + 0.77093 * group.height), controlPoint2: CGPoint(x: group.minX + 0.75747 * group.width, y: group.minY + 0.77213 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.75200 * group.width, y: group.minY + 0.77973 * group.height), controlPoint1: CGPoint(x: group.minX + 0.75286 * group.width, y: group.minY + 0.77513 * group.height), controlPoint2: CGPoint(x: group.minX + 0.75200 * group.width, y: group.minY + 0.77693 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.75555 * group.width, y: group.minY + 0.78593 * group.height), controlPoint1: CGPoint(x: group.minX + 0.75200 * group.width, y: group.minY + 0.78553 * group.height), controlPoint2: CGPoint(x: group.minX + 0.75517 * group.width, y: group.minY + 0.78593 * group.height))
            proPath.addLine(to: CGPoint(x: group.minX + 0.78272 * group.width, y: group.minY + 0.78593 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.78627 * group.width, y: group.minY + 0.77973 * group.height), controlPoint1: CGPoint(x: group.minX + 0.78310 * group.width, y: group.minY + 0.78593 * group.height), controlPoint2: CGPoint(x: group.minX + 0.78627 * group.width, y: group.minY + 0.78553 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.78416 * group.width, y: group.minY + 0.77433 * group.height), controlPoint1: CGPoint(x: group.minX + 0.78627 * group.width, y: group.minY + 0.77693 * group.height), controlPoint2: CGPoint(x: group.minX + 0.78541 * group.width, y: group.minY + 0.77513 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.78090 * group.width, y: group.minY + 0.76353 * group.height), controlPoint1: CGPoint(x: group.minX + 0.78080 * group.width, y: group.minY + 0.77213 * group.height), controlPoint2: CGPoint(x: group.minX + 0.78090 * group.width, y: group.minY + 0.77093 * group.height))
            proPath.addLine(to: CGPoint(x: group.minX + 0.78090 * group.width, y: group.minY + 0.63633 * group.height))
            proPath.addLine(to: CGPoint(x: group.minX + 0.75555 * group.width, y: group.minY + 0.63633 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.75200 * group.width, y: group.minY + 0.64253 * group.height), controlPoint1: CGPoint(x: group.minX + 0.75517 * group.width, y: group.minY + 0.63633 * group.height), controlPoint2: CGPoint(x: group.minX + 0.75200 * group.width, y: group.minY + 0.63673 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.75411 * group.width, y: group.minY + 0.64793 * group.height), controlPoint1: CGPoint(x: group.minX + 0.75200 * group.width, y: group.minY + 0.64533 * group.height), controlPoint2: CGPoint(x: group.minX + 0.75286 * group.width, y: group.minY + 0.64713 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.75738 * group.width, y: group.minY + 0.65873 * group.height), controlPoint1: CGPoint(x: group.minX + 0.75747 * group.width, y: group.minY + 0.65013 * group.height), controlPoint2: CGPoint(x: group.minX + 0.75738 * group.width, y: group.minY + 0.65133 * group.height))
            proPath.addLine(to: CGPoint(x: group.minX + 0.75738 * group.width, y: group.minY + 0.76353 * group.height))
            proPath.close()
            proPath.move(to: CGPoint(x: group.minX + 0.82765 * group.width, y: group.minY + 0.76353 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.82438 * group.width, y: group.minY + 0.77433 * group.height), controlPoint1: CGPoint(x: group.minX + 0.82765 * group.width, y: group.minY + 0.77093 * group.height), controlPoint2: CGPoint(x: group.minX + 0.82774 * group.width, y: group.minY + 0.77213 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.82227 * group.width, y: group.minY + 0.77973 * group.height), controlPoint1: CGPoint(x: group.minX + 0.82314 * group.width, y: group.minY + 0.77513 * group.height), controlPoint2: CGPoint(x: group.minX + 0.82227 * group.width, y: group.minY + 0.77693 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.82582 * group.width, y: group.minY + 0.78593 * group.height), controlPoint1: CGPoint(x: group.minX + 0.82227 * group.width, y: group.minY + 0.78553 * group.height), controlPoint2: CGPoint(x: group.minX + 0.82544 * group.width, y: group.minY + 0.78593 * group.height))
            proPath.addLine(to: CGPoint(x: group.minX + 0.85299 * group.width, y: group.minY + 0.78593 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.85654 * group.width, y: group.minY + 0.77973 * group.height), controlPoint1: CGPoint(x: group.minX + 0.85338 * group.width, y: group.minY + 0.78593 * group.height), controlPoint2: CGPoint(x: group.minX + 0.85654 * group.width, y: group.minY + 0.78553 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.85443 * group.width, y: group.minY + 0.77433 * group.height), controlPoint1: CGPoint(x: group.minX + 0.85654 * group.width, y: group.minY + 0.77693 * group.height), controlPoint2: CGPoint(x: group.minX + 0.85568 * group.width, y: group.minY + 0.77513 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.85117 * group.width, y: group.minY + 0.76353 * group.height), controlPoint1: CGPoint(x: group.minX + 0.85107 * group.width, y: group.minY + 0.77213 * group.height), controlPoint2: CGPoint(x: group.minX + 0.85117 * group.width, y: group.minY + 0.77093 * group.height))
            proPath.addLine(to: CGPoint(x: group.minX + 0.85117 * group.width, y: group.minY + 0.63633 * group.height))
            proPath.addLine(to: CGPoint(x: group.minX + 0.82582 * group.width, y: group.minY + 0.63633 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.82227 * group.width, y: group.minY + 0.64253 * group.height), controlPoint1: CGPoint(x: group.minX + 0.82544 * group.width, y: group.minY + 0.63633 * group.height), controlPoint2: CGPoint(x: group.minX + 0.82227 * group.width, y: group.minY + 0.63673 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.82438 * group.width, y: group.minY + 0.64793 * group.height), controlPoint1: CGPoint(x: group.minX + 0.82227 * group.width, y: group.minY + 0.64533 * group.height), controlPoint2: CGPoint(x: group.minX + 0.82314 * group.width, y: group.minY + 0.64713 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.82765 * group.width, y: group.minY + 0.65873 * group.height), controlPoint1: CGPoint(x: group.minX + 0.82774 * group.width, y: group.minY + 0.65013 * group.height), controlPoint2: CGPoint(x: group.minX + 0.82765 * group.width, y: group.minY + 0.65133 * group.height))
            proPath.addLine(to: CGPoint(x: group.minX + 0.82765 * group.width, y: group.minY + 0.76353 * group.height))
            proPath.close()
            proPath.move(to: CGPoint(x: group.minX + 0.85549 * group.width, y: group.minY + 0.64813 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.86134 * group.width, y: group.minY + 0.66653 * group.height), controlPoint1: CGPoint(x: group.minX + 0.86029 * group.width, y: group.minY + 0.65173 * group.height), controlPoint2: CGPoint(x: group.minX + 0.86134 * group.width, y: group.minY + 0.65653 * group.height))
            proPath.addLine(to: CGPoint(x: group.minX + 0.86134 * group.width, y: group.minY + 0.69073 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.85549 * group.width, y: group.minY + 0.70813 * group.height), controlPoint1: CGPoint(x: group.minX + 0.86134 * group.width, y: group.minY + 0.70053 * group.height), controlPoint2: CGPoint(x: group.minX + 0.86067 * group.width, y: group.minY + 0.70713 * group.height))
            proPath.addLine(to: CGPoint(x: group.minX + 0.85549 * group.width, y: group.minY + 0.71993 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.86134 * group.width, y: group.minY + 0.74153 * group.height), controlPoint1: CGPoint(x: group.minX + 0.86125 * group.width, y: group.minY + 0.72113 * group.height), controlPoint2: CGPoint(x: group.minX + 0.86134 * group.width, y: group.minY + 0.73233 * group.height))
            proPath.addLine(to: CGPoint(x: group.minX + 0.86134 * group.width, y: group.minY + 0.75513 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.86518 * group.width, y: group.minY + 0.78053 * group.height), controlPoint1: CGPoint(x: group.minX + 0.86134 * group.width, y: group.minY + 0.76453 * group.height), controlPoint2: CGPoint(x: group.minX + 0.86182 * group.width, y: group.minY + 0.77333 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.87603 * group.width, y: group.minY + 0.78893 * group.height), controlPoint1: CGPoint(x: group.minX + 0.86816 * group.width, y: group.minY + 0.78673 * group.height), controlPoint2: CGPoint(x: group.minX + 0.87190 * group.width, y: group.minY + 0.78893 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.88688 * group.width, y: group.minY + 0.78173 * group.height), controlPoint1: CGPoint(x: group.minX + 0.88016 * group.width, y: group.minY + 0.78893 * group.height), controlPoint2: CGPoint(x: group.minX + 0.88362 * group.width, y: group.minY + 0.78733 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.89216 * group.width, y: group.minY + 0.76513 * group.height), controlPoint1: CGPoint(x: group.minX + 0.88899 * group.width, y: group.minY + 0.77833 * group.height), controlPoint2: CGPoint(x: group.minX + 0.89216 * group.width, y: group.minY + 0.77093 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.88938 * group.width, y: group.minY + 0.75933 * group.height), controlPoint1: CGPoint(x: group.minX + 0.89216 * group.width, y: group.minY + 0.76233 * group.height), controlPoint2: CGPoint(x: group.minX + 0.89062 * group.width, y: group.minY + 0.75933 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.88525 * group.width, y: group.minY + 0.76513 * group.height), controlPoint1: CGPoint(x: group.minX + 0.88707 * group.width, y: group.minY + 0.75933 * group.height), controlPoint2: CGPoint(x: group.minX + 0.88678 * group.width, y: group.minY + 0.76513 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.88429 * group.width, y: group.minY + 0.75933 * group.height), controlPoint1: CGPoint(x: group.minX + 0.88400 * group.width, y: group.minY + 0.76513 * group.height), controlPoint2: CGPoint(x: group.minX + 0.88429 * group.width, y: group.minY + 0.76113 * group.height))
            proPath.addLine(to: CGPoint(x: group.minX + 0.88429 * group.width, y: group.minY + 0.74173 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.86739 * group.width, y: group.minY + 0.71273 * group.height), controlPoint1: CGPoint(x: group.minX + 0.88410 * group.width, y: group.minY + 0.72053 * group.height), controlPoint2: CGPoint(x: group.minX + 0.87594 * group.width, y: group.minY + 0.71533 * group.height))
            proPath.addLine(to: CGPoint(x: group.minX + 0.86739 * group.width, y: group.minY + 0.71233 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.88429 * group.width, y: group.minY + 0.67453 * group.height), controlPoint1: CGPoint(x: group.minX + 0.87718 * group.width, y: group.minY + 0.70753 * group.height), controlPoint2: CGPoint(x: group.minX + 0.88448 * group.width, y: group.minY + 0.69753 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.87450 * group.width, y: group.minY + 0.64173 * group.height), controlPoint1: CGPoint(x: group.minX + 0.88419 * group.width, y: group.minY + 0.65933 * group.height), controlPoint2: CGPoint(x: group.minX + 0.88093 * group.width, y: group.minY + 0.64833 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.85597 * group.width, y: group.minY + 0.63633 * group.height), controlPoint1: CGPoint(x: group.minX + 0.86874 * group.width, y: group.minY + 0.63593 * group.height), controlPoint2: CGPoint(x: group.minX + 0.86221 * group.width, y: group.minY + 0.63633 * group.height))
            proPath.addLine(to: CGPoint(x: group.minX + 0.85549 * group.width, y: group.minY + 0.63633 * group.height))
            proPath.addLine(to: CGPoint(x: group.minX + 0.85549 * group.width, y: group.minY + 0.64813 * group.height))
            proPath.close()
            proPath.move(to: CGPoint(x: group.minX + 0.92298 * group.width, y: group.minY + 0.63333 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.89312 * group.width, y: group.minY + 0.71113 * group.height), controlPoint1: CGPoint(x: group.minX + 0.90262 * group.width, y: group.minY + 0.63713 * group.height), controlPoint2: CGPoint(x: group.minX + 0.89312 * group.width, y: group.minY + 0.67133 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.92298 * group.width, y: group.minY + 0.78893 * group.height), controlPoint1: CGPoint(x: group.minX + 0.89312 * group.width, y: group.minY + 0.75093 * group.height), controlPoint2: CGPoint(x: group.minX + 0.90262 * group.width, y: group.minY + 0.78513 * group.height))
            proPath.addLine(to: CGPoint(x: group.minX + 0.92298 * group.width, y: group.minY + 0.77733 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.91808 * group.width, y: group.minY + 0.76293 * group.height), controlPoint1: CGPoint(x: group.minX + 0.91846 * group.width, y: group.minY + 0.77393 * group.height), controlPoint2: CGPoint(x: group.minX + 0.91808 * group.width, y: group.minY + 0.76793 * group.height))
            proPath.addLine(to: CGPoint(x: group.minX + 0.91808 * group.width, y: group.minY + 0.65933 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.92298 * group.width, y: group.minY + 0.64493 * group.height), controlPoint1: CGPoint(x: group.minX + 0.91808 * group.width, y: group.minY + 0.65433 * group.height), controlPoint2: CGPoint(x: group.minX + 0.91846 * group.width, y: group.minY + 0.64833 * group.height))
            proPath.addLine(to: CGPoint(x: group.minX + 0.92298 * group.width, y: group.minY + 0.63333 * group.height))
            proPath.close()
            proPath.move(to: CGPoint(x: group.minX + 0.92730 * group.width, y: group.minY + 0.78893 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.95715 * group.width, y: group.minY + 0.71113 * group.height), controlPoint1: CGPoint(x: group.minX + 0.94765 * group.width, y: group.minY + 0.78513 * group.height), controlPoint2: CGPoint(x: group.minX + 0.95715 * group.width, y: group.minY + 0.75093 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.92730 * group.width, y: group.minY + 0.63333 * group.height), controlPoint1: CGPoint(x: group.minX + 0.95715 * group.width, y: group.minY + 0.67133 * group.height), controlPoint2: CGPoint(x: group.minX + 0.94765 * group.width, y: group.minY + 0.63713 * group.height))
            proPath.addLine(to: CGPoint(x: group.minX + 0.92730 * group.width, y: group.minY + 0.64493 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.93219 * group.width, y: group.minY + 0.65933 * group.height), controlPoint1: CGPoint(x: group.minX + 0.93181 * group.width, y: group.minY + 0.64833 * group.height), controlPoint2: CGPoint(x: group.minX + 0.93219 * group.width, y: group.minY + 0.65433 * group.height))
            proPath.addLine(to: CGPoint(x: group.minX + 0.93219 * group.width, y: group.minY + 0.76293 * group.height))
            proPath.addCurve(to: CGPoint(x: group.minX + 0.92730 * group.width, y: group.minY + 0.77733 * group.height), controlPoint1: CGPoint(x: group.minX + 0.93219 * group.width, y: group.minY + 0.76793 * group.height), controlPoint2: CGPoint(x: group.minX + 0.93181 * group.width, y: group.minY + 0.77393 * group.height))
            proPath.addLine(to: CGPoint(x: group.minX + 0.92730 * group.width, y: group.minY + 0.78893 * group.height))
            proPath.close()
            CommsProStyleKit.commsPeach.setFill()
            proPath.fill()
        }
    }

    public dynamic class func drawButton(frame: CGRect = CGRect(x: 5, y: 15, width: 148, height: 30), message: String = "Manage Subscriptions", isEnabled: Bool = false, isHighlighted: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!


        //// Variable Declarations
        let buttonTextColor = isEnabled ? CommsProStyleKit.commsPeach : CommsProStyleKit.commsDarkTan
        let buttonBackgroundColor = isHighlighted ? CommsProStyleKit.commsDeepGreen : CommsProStyleKit.commsBlack

        //// Peach Rectangle Drawing
        let peachRectanglePath = UIBezierPath(rect: CGRect(x: frame.minX, y: frame.minY, width: 55, height: frame.height))
        CommsProStyleKit.commsPeach.setFill()
        peachRectanglePath.fill()


        //// Black Rectangle Drawing
        let blackRectangleRect = CGRect(x: frame.minX, y: frame.minY, width: frame.width, height: frame.height - 5)
        let blackRectanglePath = UIBezierPath(rect: blackRectangleRect)
        buttonBackgroundColor.setFill()
        blackRectanglePath.fill()
        let blackRectangleStyle = NSMutableParagraphStyle()
        blackRectangleStyle.alignment = .center
        let blackRectangleFontAttributes = [NSFontAttributeName: UIFont(name: "Helvetica", size: 12)!, NSForegroundColorAttributeName: buttonTextColor, NSParagraphStyleAttributeName: blackRectangleStyle]

        let blackRectangleTextHeight: CGFloat = message.boundingRect(with: CGSize(width: blackRectangleRect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: blackRectangleFontAttributes, context: nil).height
        context.saveGState()
        context.clip(to: blackRectangleRect)
        message.draw(in: CGRect(x: blackRectangleRect.minX, y: blackRectangleRect.minY + (blackRectangleRect.height - blackRectangleTextHeight) / 2, width: blackRectangleRect.width, height: blackRectangleTextHeight), withAttributes: blackRectangleFontAttributes)
        context.restoreGState()
    }

    public dynamic class func drawBigLabel(labelText: String = "LABEL") {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Black Rectangle Drawing
        let blackRectanglePath = UIBezierPath(rect: CGRect(x: 0, y: -0.01, width: 100, height: 50))
        CommsProStyleKit.commsBlack.setFill()
        blackRectanglePath.fill()


        //// Text Drawing
        let textRect = CGRect(x: 0, y: 0, width: 100, height: 50)
        let textStyle = NSMutableParagraphStyle()
        textStyle.alignment = .center
        let textFontAttributes = [NSFontAttributeName: UIFont(name: "TrebuchetMS", size: 32)!, NSForegroundColorAttributeName: CommsProStyleKit.commsBlue, NSParagraphStyleAttributeName: textStyle]

        let textTextHeight: CGFloat = labelText.boundingRect(with: CGSize(width: textRect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: textFontAttributes, context: nil).height
        context.saveGState()
        context.clip(to: textRect)
        labelText.draw(in: CGRect(x: textRect.minX, y: textRect.minY + (textRect.height - textTextHeight) / 2, width: textRect.width, height: textTextHeight), withAttributes: textFontAttributes)
        context.restoreGState()
    }

    public dynamic class func drawMessageBlock(frame: CGRect = CGRect(x: 47, y: 27, width: 467, height: 129), isLocked: Bool = true, senderUsername: String = "Picciano", createdAt: String = "Message created: 23 November 2015", message: String = "Manage Subscriptions") {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        // This non-generic function dramatically improves compilation times of complex expressions.
        func fastFloor(_ x: CGFloat) -> CGFloat { return floor(x) }

        //// Background Drawing
        let backgroundPath = UIBezierPath(rect: CGRect(x: frame.minX, y: frame.minY, width: frame.width, height: frame.height))
        CommsProStyleKit.commsDarkTan.setFill()
        backgroundPath.fill()


        //// Lcok Symbol Drawing
        let lcokSymbolRect = CGRect(x: frame.minX + 5, y: frame.minY + 5, width: 20, height: 20)
        context.saveGState()
        context.clip(to: lcokSymbolRect)
        context.translateBy(x: lcokSymbolRect.minX, y: lcokSymbolRect.minY)

        CommsProStyleKit.drawLockIcon(frame: CGRect(x: 0, y: 0, width: lcokSymbolRect.width, height: lcokSymbolRect.height), lockColor: CommsProStyleKit.commsBlack, keyColor: CommsProStyleKit.commsPeach, isLocked: isLocked)
        context.restoreGState()


        //// Created At Text Drawing
        let createdAtTextRect = CGRect(x: frame.minX + fastFloor((frame.width - 5) * 0.49784 + 0.5), y: frame.minY, width: frame.width - 5 - fastFloor((frame.width - 5) * 0.49784 + 0.5), height: 25)
        let createdAtTextStyle = NSMutableParagraphStyle()
        createdAtTextStyle.alignment = .right
        let createdAtTextFontAttributes = [NSFontAttributeName: UIFont(name: "TrebuchetMS", size: UIFont.smallSystemFontSize)!, NSForegroundColorAttributeName: CommsProStyleKit.commsDeepGreen, NSParagraphStyleAttributeName: createdAtTextStyle]

        let createdAtTextTextHeight: CGFloat = createdAt.boundingRect(with: CGSize(width: createdAtTextRect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: createdAtTextFontAttributes, context: nil).height
        context.saveGState()
        context.clip(to: createdAtTextRect)
        createdAt.draw(in: CGRect(x: createdAtTextRect.minX, y: createdAtTextRect.minY + (createdAtTextRect.height - createdAtTextTextHeight) / 2, width: createdAtTextRect.width, height: createdAtTextTextHeight), withAttributes: createdAtTextFontAttributes)
        context.restoreGState()


        //// Sender Username Text Drawing
        let senderUsernameTextRect = CGRect(x: frame.minX + 31, y: frame.minY, width: fastFloor((frame.width - 31) * 0.45642 + 0.5), height: 25)
        let senderUsernameTextStyle = NSMutableParagraphStyle()
        senderUsernameTextStyle.alignment = .left
        let senderUsernameTextFontAttributes = [NSFontAttributeName: UIFont(name: "TrebuchetMS-Bold", size: UIFont.systemFontSize)!, NSForegroundColorAttributeName: CommsProStyleKit.commsBlack, NSParagraphStyleAttributeName: senderUsernameTextStyle]

        let senderUsernameTextTextHeight: CGFloat = senderUsername.boundingRect(with: CGSize(width: senderUsernameTextRect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: senderUsernameTextFontAttributes, context: nil).height
        context.saveGState()
        context.clip(to: senderUsernameTextRect)
        senderUsername.draw(in: CGRect(x: senderUsernameTextRect.minX, y: senderUsernameTextRect.minY + (senderUsernameTextRect.height - senderUsernameTextTextHeight) / 2, width: senderUsernameTextRect.width, height: senderUsernameTextTextHeight), withAttributes: senderUsernameTextFontAttributes)
        context.restoreGState()


        //// Message Text Drawing
        let messageTextRect = CGRect(x: frame.minX + 5, y: frame.minY + 25, width: frame.width - 10, height: frame.height - 25)
        let messageTextStyle = NSMutableParagraphStyle()
        messageTextStyle.alignment = .left
        let messageTextFontAttributes = [NSFontAttributeName: UIFont(name: "TrebuchetMS", size: UIFont.smallSystemFontSize)!, NSForegroundColorAttributeName: CommsProStyleKit.commsBlack, NSParagraphStyleAttributeName: messageTextStyle]

        message.draw(in: messageTextRect, withAttributes: messageTextFontAttributes)
    }

    public dynamic class func drawLockIcon(frame: CGRect = CGRect(x: 5, y: 5, width: 90, height: 90), lockColor: UIColor = UIColor(red: 0.800, green: 0.320, blue: 0.320, alpha: 1.000), keyColor: UIColor = UIColor(red: 0.652, green: 0.800, blue: 0.320, alpha: 1.000), isLocked: Bool = true) {

        //// Variable Declarations
        let isNotLocked = !isLocked

        //// Lock Body Drawing
        let lockBodyPath = UIBezierPath()
        lockBodyPath.move(to: CGPoint(x: frame.minX + 0.83719 * frame.width, y: frame.minY + 0.76760 * frame.height))
        lockBodyPath.addCurve(to: CGPoint(x: frame.minX + 0.86452 * frame.width, y: frame.minY + 0.73318 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.83719 * frame.width, y: frame.minY + 0.75279 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.84823 * frame.width, y: frame.minY + 0.73993 * frame.height))
        lockBodyPath.addLine(to: CGPoint(x: frame.minX + 0.86452 * frame.width, y: frame.minY + 0.72508 * frame.height))
        lockBodyPath.addCurve(to: CGPoint(x: frame.minX + 0.83719 * frame.width, y: frame.minY + 0.69066 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.84823 * frame.width, y: frame.minY + 0.71833 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.83719 * frame.width, y: frame.minY + 0.70547 * frame.height))
        lockBodyPath.addCurve(to: CGPoint(x: frame.minX + 0.86452 * frame.width, y: frame.minY + 0.65624 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.83719 * frame.width, y: frame.minY + 0.67585 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.84823 * frame.width, y: frame.minY + 0.66299 * frame.height))
        lockBodyPath.addLine(to: CGPoint(x: frame.minX + 0.86452 * frame.width, y: frame.minY + 0.64814 * frame.height))
        lockBodyPath.addCurve(to: CGPoint(x: frame.minX + 0.83719 * frame.width, y: frame.minY + 0.61371 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.84823 * frame.width, y: frame.minY + 0.64139 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.83719 * frame.width, y: frame.minY + 0.62852 * frame.height))
        lockBodyPath.addCurve(to: CGPoint(x: frame.minX + 0.86452 * frame.width, y: frame.minY + 0.57925 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.83719 * frame.width, y: frame.minY + 0.59890 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.84823 * frame.width, y: frame.minY + 0.58600 * frame.height))
        lockBodyPath.addLine(to: CGPoint(x: frame.minX + 0.86452 * frame.width, y: frame.minY + 0.53930 * frame.height))
        lockBodyPath.addCurve(to: CGPoint(x: frame.minX + 0.77253 * frame.width, y: frame.minY + 0.46894 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.86452 * frame.width, y: frame.minY + 0.50043 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.82498 * frame.width, y: frame.minY + 0.46894 * frame.height))
        lockBodyPath.addLine(to: CGPoint(x: frame.minX + 0.24058 * frame.width, y: frame.minY + 0.46894 * frame.height))
        lockBodyPath.addCurve(to: CGPoint(x: frame.minX + 0.14286 * frame.width, y: frame.minY + 0.53930 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.18813 * frame.width, y: frame.minY + 0.46894 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.14286 * frame.width, y: frame.minY + 0.50043 * frame.height))
        lockBodyPath.addLine(to: CGPoint(x: frame.minX + 0.14286 * frame.width, y: frame.minY + 0.57822 * frame.height))
        lockBodyPath.addCurve(to: CGPoint(x: frame.minX + 0.17293 * frame.width, y: frame.minY + 0.61371 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.16064 * frame.width, y: frame.minY + 0.58462 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.17293 * frame.width, y: frame.minY + 0.59808 * frame.height))
        lockBodyPath.addCurve(to: CGPoint(x: frame.minX + 0.14286 * frame.width, y: frame.minY + 0.64919 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.17293 * frame.width, y: frame.minY + 0.62934 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.16064 * frame.width, y: frame.minY + 0.64280 * frame.height))
        lockBodyPath.addLine(to: CGPoint(x: frame.minX + 0.14286 * frame.width, y: frame.minY + 0.65518 * frame.height))
        lockBodyPath.addCurve(to: CGPoint(x: frame.minX + 0.17293 * frame.width, y: frame.minY + 0.69066 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.16064 * frame.width, y: frame.minY + 0.66157 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.17293 * frame.width, y: frame.minY + 0.67504 * frame.height))
        lockBodyPath.addCurve(to: CGPoint(x: frame.minX + 0.14286 * frame.width, y: frame.minY + 0.72614 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.17293 * frame.width, y: frame.minY + 0.70629 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.16064 * frame.width, y: frame.minY + 0.71975 * frame.height))
        lockBodyPath.addLine(to: CGPoint(x: frame.minX + 0.14286 * frame.width, y: frame.minY + 0.73213 * frame.height))
        lockBodyPath.addCurve(to: CGPoint(x: frame.minX + 0.17293 * frame.width, y: frame.minY + 0.76761 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.16064 * frame.width, y: frame.minY + 0.73852 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.17293 * frame.width, y: frame.minY + 0.75198 * frame.height))
        lockBodyPath.addCurve(to: CGPoint(x: frame.minX + 0.14286 * frame.width, y: frame.minY + 0.80311 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.17293 * frame.width, y: frame.minY + 0.78324 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.16064 * frame.width, y: frame.minY + 0.79671 * frame.height))
        lockBodyPath.addLine(to: CGPoint(x: frame.minX + 0.14286 * frame.width, y: frame.minY + 0.82076 * frame.height))
        lockBodyPath.addCurve(to: CGPoint(x: frame.minX + 0.24058 * frame.width, y: frame.minY + 0.89011 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.14286 * frame.width, y: frame.minY + 0.85962 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.18813 * frame.width, y: frame.minY + 0.89011 * frame.height))
        lockBodyPath.addLine(to: CGPoint(x: frame.minX + 0.77253 * frame.width, y: frame.minY + 0.89011 * frame.height))
        lockBodyPath.addCurve(to: CGPoint(x: frame.minX + 0.86452 * frame.width, y: frame.minY + 0.82075 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.82498 * frame.width, y: frame.minY + 0.89011 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.86452 * frame.width, y: frame.minY + 0.85962 * frame.height))
        lockBodyPath.addLine(to: CGPoint(x: frame.minX + 0.86452 * frame.width, y: frame.minY + 0.80207 * frame.height))
        lockBodyPath.addCurve(to: CGPoint(x: frame.minX + 0.83719 * frame.width, y: frame.minY + 0.76760 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.84823 * frame.width, y: frame.minY + 0.79532 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.83719 * frame.width, y: frame.minY + 0.78242 * frame.height))
        lockBodyPath.close()
        lockColor.setFill()
        lockBodyPath.fill()


        if (isLocked) {
            //// Key Drawing
            let keyPath = UIBezierPath()
            keyPath.move(to: CGPoint(x: frame.minX + 0.75126 * frame.width, y: frame.minY + 0.64763 * frame.height))
            keyPath.addLine(to: CGPoint(x: frame.minX + 0.41890 * frame.width, y: frame.minY + 0.64763 * frame.height))
            keyPath.addCurve(to: CGPoint(x: frame.minX + 0.33358 * frame.width, y: frame.minY + 0.56210 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.41740 * frame.width, y: frame.minY + 0.60013 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.37981 * frame.width, y: frame.minY + 0.56212 * frame.height))
            keyPath.addLine(to: CGPoint(x: frame.minX + 0.32667 * frame.width, y: frame.minY + 0.56211 * frame.height))
            keyPath.addCurve(to: CGPoint(x: frame.minX + 0.24127 * frame.width, y: frame.minY + 0.65055 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.27949 * frame.width, y: frame.minY + 0.56212 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.24129 * frame.width, y: frame.minY + 0.60169 * frame.height))
            keyPath.addLine(to: CGPoint(x: frame.minX + 0.24127 * frame.width, y: frame.minY + 0.72266 * frame.height))
            keyPath.addCurve(to: CGPoint(x: frame.minX + 0.32667 * frame.width, y: frame.minY + 0.81111 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.24129 * frame.width, y: frame.minY + 0.77152 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.27949 * frame.width, y: frame.minY + 0.81109 * frame.height))
            keyPath.addLine(to: CGPoint(x: frame.minX + 0.33358 * frame.width, y: frame.minY + 0.81111 * frame.height))
            keyPath.addCurve(to: CGPoint(x: frame.minX + 0.41890 * frame.width, y: frame.minY + 0.72559 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.37981 * frame.width, y: frame.minY + 0.81109 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.41740 * frame.width, y: frame.minY + 0.77309 * frame.height))
            keyPath.addLine(to: CGPoint(x: frame.minX + 0.61746 * frame.width, y: frame.minY + 0.72559 * frame.height))
            keyPath.addLine(to: CGPoint(x: frame.minX + 0.61746 * frame.width, y: frame.minY + 0.79703 * frame.height))
            keyPath.addLine(to: CGPoint(x: frame.minX + 0.65509 * frame.width, y: frame.minY + 0.79703 * frame.height))
            keyPath.addLine(to: CGPoint(x: frame.minX + 0.65509 * frame.width, y: frame.minY + 0.74507 * frame.height))
            keyPath.addLine(to: CGPoint(x: frame.minX + 0.69272 * frame.width, y: frame.minY + 0.74507 * frame.height))
            keyPath.addLine(to: CGPoint(x: frame.minX + 0.69272 * frame.width, y: frame.minY + 0.79703 * frame.height))
            keyPath.addLine(to: CGPoint(x: frame.minX + 0.73035 * frame.width, y: frame.minY + 0.79703 * frame.height))
            keyPath.addLine(to: CGPoint(x: frame.minX + 0.73035 * frame.width, y: frame.minY + 0.72558 * frame.height))
            keyPath.addLine(to: CGPoint(x: frame.minX + 0.75126 * frame.width, y: frame.minY + 0.72558 * frame.height))
            keyPath.addCurve(to: CGPoint(x: frame.minX + 0.78889 * frame.width, y: frame.minY + 0.68660 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.77204 * frame.width, y: frame.minY + 0.72558 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.78889 * frame.width, y: frame.minY + 0.70813 * frame.height))
            keyPath.addCurve(to: CGPoint(x: frame.minX + 0.75126 * frame.width, y: frame.minY + 0.64763 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.78889 * frame.width, y: frame.minY + 0.66508 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.77204 * frame.width, y: frame.minY + 0.64763 * frame.height))
            keyPath.close()
            keyPath.move(to: CGPoint(x: frame.minX + 0.36671 * frame.width, y: frame.minY + 0.72266 * frame.height))
            keyPath.addCurve(to: CGPoint(x: frame.minX + 0.33358 * frame.width, y: frame.minY + 0.75697 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.36667 * frame.width, y: frame.minY + 0.74160 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.35186 * frame.width, y: frame.minY + 0.75694 * frame.height))
            keyPath.addLine(to: CGPoint(x: frame.minX + 0.32666 * frame.width, y: frame.minY + 0.75697 * frame.height))
            keyPath.addCurve(to: CGPoint(x: frame.minX + 0.29353 * frame.width, y: frame.minY + 0.72266 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.30838 * frame.width, y: frame.minY + 0.75694 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.29357 * frame.width, y: frame.minY + 0.74160 * frame.height))
            keyPath.addLine(to: CGPoint(x: frame.minX + 0.29353 * frame.width, y: frame.minY + 0.65055 * frame.height))
            keyPath.addCurve(to: CGPoint(x: frame.minX + 0.32666 * frame.width, y: frame.minY + 0.61623 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.29357 * frame.width, y: frame.minY + 0.63160 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.30838 * frame.width, y: frame.minY + 0.61627 * frame.height))
            keyPath.addLine(to: CGPoint(x: frame.minX + 0.33358 * frame.width, y: frame.minY + 0.61623 * frame.height))
            keyPath.addCurve(to: CGPoint(x: frame.minX + 0.36671 * frame.width, y: frame.minY + 0.65055 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.35186 * frame.width, y: frame.minY + 0.61627 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.36667 * frame.width, y: frame.minY + 0.63160 * frame.height))
            keyPath.addLine(to: CGPoint(x: frame.minX + 0.36671 * frame.width, y: frame.minY + 0.72266 * frame.height))
            keyPath.close()
            keyColor.setFill()
            keyPath.fill()


            //// Hasp 2 Drawing
            let hasp2Path = UIBezierPath()
            hasp2Path.move(to: CGPoint(x: frame.minX + 0.49259 * frame.width, y: frame.minY + 0.08889 * frame.height))
            hasp2Path.addCurve(to: CGPoint(x: frame.minX + 0.24384 * frame.width, y: frame.minY + 0.31444 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.35543 * frame.width, y: frame.minY + 0.08889 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.24384 * frame.width, y: frame.minY + 0.19007 * frame.height))
            hasp2Path.addLine(to: CGPoint(x: frame.minX + 0.24384 * frame.width, y: frame.minY + 0.47483 * frame.height))
            hasp2Path.addLine(to: CGPoint(x: frame.minX + 0.35439 * frame.width, y: frame.minY + 0.47483 * frame.height))
            hasp2Path.addLine(to: CGPoint(x: frame.minX + 0.35439 * frame.width, y: frame.minY + 0.31444 * frame.height))
            hasp2Path.addCurve(to: CGPoint(x: frame.minX + 0.49259 * frame.width, y: frame.minY + 0.18913 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.35439 * frame.width, y: frame.minY + 0.24523 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.41627 * frame.width, y: frame.minY + 0.18913 * frame.height))
            hasp2Path.addCurve(to: CGPoint(x: frame.minX + 0.63079 * frame.width, y: frame.minY + 0.31444 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.56892 * frame.width, y: frame.minY + 0.18913 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.63079 * frame.width, y: frame.minY + 0.24523 * frame.height))
            hasp2Path.addLine(to: CGPoint(x: frame.minX + 0.63079 * frame.width, y: frame.minY + 0.47483 * frame.height))
            hasp2Path.addLine(to: CGPoint(x: frame.minX + 0.63079 * frame.width, y: frame.minY + 0.53497 * frame.height))
            hasp2Path.addLine(to: CGPoint(x: frame.minX + 0.63079 * frame.width, y: frame.minY + 0.63522 * frame.height))
            hasp2Path.addLine(to: CGPoint(x: frame.minX + 0.74135 * frame.width, y: frame.minY + 0.63522 * frame.height))
            hasp2Path.addLine(to: CGPoint(x: frame.minX + 0.74135 * frame.width, y: frame.minY + 0.31444 * frame.height))
            hasp2Path.addCurve(to: CGPoint(x: frame.minX + 0.49259 * frame.width, y: frame.minY + 0.08889 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.74135 * frame.width, y: frame.minY + 0.19007 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.62976 * frame.width, y: frame.minY + 0.08889 * frame.height))
            hasp2Path.close()
            lockColor.setFill()
            hasp2Path.fill()
        }


        if (isNotLocked) {
            //// Hasp Drawing
            let haspPath = UIBezierPath()
            haspPath.move(to: CGPoint(x: frame.minX + 0.49259 * frame.width, y: frame.minY + 0.02222 * frame.height))
            haspPath.addCurve(to: CGPoint(x: frame.minX + 0.24384 * frame.width, y: frame.minY + 0.24777 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.35543 * frame.width, y: frame.minY + 0.02222 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.24384 * frame.width, y: frame.minY + 0.12340 * frame.height))
            haspPath.addLine(to: CGPoint(x: frame.minX + 0.35439 * frame.width, y: frame.minY + 0.24777 * frame.height))
            haspPath.addCurve(to: CGPoint(x: frame.minX + 0.49259 * frame.width, y: frame.minY + 0.12247 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.35439 * frame.width, y: frame.minY + 0.17857 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.41627 * frame.width, y: frame.minY + 0.12247 * frame.height))
            haspPath.addCurve(to: CGPoint(x: frame.minX + 0.63079 * frame.width, y: frame.minY + 0.24777 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.56892 * frame.width, y: frame.minY + 0.12247 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.63079 * frame.width, y: frame.minY + 0.17857 * frame.height))
            haspPath.addLine(to: CGPoint(x: frame.minX + 0.63079 * frame.width, y: frame.minY + 0.40816 * frame.height))
            haspPath.addLine(to: CGPoint(x: frame.minX + 0.63079 * frame.width, y: frame.minY + 0.46831 * frame.height))
            haspPath.addLine(to: CGPoint(x: frame.minX + 0.63079 * frame.width, y: frame.minY + 0.56855 * frame.height))
            haspPath.addLine(to: CGPoint(x: frame.minX + 0.74135 * frame.width, y: frame.minY + 0.56855 * frame.height))
            haspPath.addLine(to: CGPoint(x: frame.minX + 0.74135 * frame.width, y: frame.minY + 0.24777 * frame.height))
            haspPath.addCurve(to: CGPoint(x: frame.minX + 0.49259 * frame.width, y: frame.minY + 0.02222 * frame.height), controlPoint1: CGPoint(x: frame.minX + 0.74135 * frame.width, y: frame.minY + 0.12340 * frame.height), controlPoint2: CGPoint(x: frame.minX + 0.62976 * frame.width, y: frame.minY + 0.02222 * frame.height))
            haspPath.close()
            lockColor.setFill()
            haspPath.fill()
        }
    }

    public dynamic class func drawChannelLock() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Symbol Drawing
        let symbolRect = CGRect(x: 0, y: 0, width: 30, height: 30)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        CommsProStyleKit.drawLockIcon(frame: CGRect(x: 0, y: 0, width: symbolRect.width, height: symbolRect.height), lockColor: CommsProStyleKit.commsBlack, keyColor: CommsProStyleKit.commsPeach, isLocked: true)
        context.restoreGState()
    }

    public dynamic class func drawInfoIcon() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Oval Drawing
        let ovalRect = CGRect(x: 5, y: 5, width: 20, height: 20)
        let ovalPath = UIBezierPath(ovalIn: ovalRect)
        CommsProStyleKit.commsDarkTan.setFill()
        ovalPath.fill()
        let ovalTextContent = "?"
        let ovalStyle = NSMutableParagraphStyle()
        ovalStyle.alignment = .center
        let ovalFontAttributes = [NSFontAttributeName: UIFont.boldSystemFont(ofSize: UIFont.labelFontSize), NSForegroundColorAttributeName: CommsProStyleKit.commsDeepGreen, NSParagraphStyleAttributeName: ovalStyle]

        let ovalTextHeight: CGFloat = ovalTextContent.boundingRect(with: CGSize(width: ovalRect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: ovalFontAttributes, context: nil).height
        context.saveGState()
        context.clip(to: ovalRect)
        ovalTextContent.draw(in: CGRect(x: ovalRect.minX, y: ovalRect.minY + (ovalRect.height - ovalTextHeight) / 2, width: ovalRect.width, height: ovalTextHeight), withAttributes: ovalFontAttributes)
        context.restoreGState()
    }

    //// Generated Images

    public dynamic class var imageOfChannelLock: UIImage {
        if Cache.imageOfChannelLock != nil {
            return Cache.imageOfChannelLock!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 30, height: 30), false, 0)
            CommsProStyleKit.drawChannelLock()

        Cache.imageOfChannelLock = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfChannelLock!
    }

    //// Customization Infrastructure

    @IBOutlet dynamic var channelLockTargets: [AnyObject]! {
        get { return Cache.channelLockTargets }
        set {
            Cache.channelLockTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: CommsProStyleKit.imageOfChannelLock)
            }
        }
    }

}
